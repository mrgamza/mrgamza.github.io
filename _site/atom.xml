<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Out of code</title>
 <link href="/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2023-10-14T08:36:14+09:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>Mark Otto</name>
   <email>markdotto@gmail.com</email>
 </author>

 
 <entry>
   <title>SwiftUI - Image</title>
   <link href="http://localhost:4000/2023/10/14/swiftui_image/"/>
   <updated>2023-10-14T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/10/14/swiftui_image</id>
   <content type="html">&lt;p&gt;어제는 SwiftUI의 Image에 대해서 봅시다.
공식 페이지는 다음과 같습니다
&lt;a href=&quot;https://developer.apple.com/documentation/swiftui/image&quot;&gt;Image&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;iOS 기준의 최소버전은 13.0입니다&lt;/p&gt;

&lt;p&gt;공식적으로 PNG, JPEG, HEIC 등을 지원한다고 합니다. SVG등등…&lt;/p&gt;

&lt;p&gt;다음과 같은 예제로 출력이 가능하다고 합니다&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Image(&quot;Landscape_4&quot;)
    .resizable()
    .aspectRatio(contentMode: .fit)
Text(&quot;Water wheel&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그리고 표준 modifires를 가지고 이미지의 fitting을 할 수 있게 해준다고 합니다&lt;/p&gt;

&lt;p&gt;modifier는&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;resizable(capInsets:resizingMode:)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;생성자&quot;&gt;생성자&lt;/h3&gt;
&lt;p&gt;Creates a labeled image that you can use as content for controls.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;init(String, bundle: Bundle?)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Creates a labeled image that you can use as content for controls, with a variable value.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;init(String, variableValue: Double?, bundle: Bundle?)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Initialize an Image with an image resource.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;init(ImageResource)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;modifier&quot;&gt;modifier&lt;/h3&gt;
&lt;p&gt;Sets the mode by which SwiftUI resizes an image to fit its space.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func resizable(capInsets: EdgeInsets, resizingMode: Image.ResizingMode) -&amp;gt; Image
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;modifier는 점점 추가하겠습니다&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>가장 짧은 테트리스</title>
   <link href="http://localhost:4000/2023/10/09/short-tetris/"/>
   <updated>2023-10-09T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/10/09/short-tetris</id>
   <content type="html">&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;body onKeyDown=K=event.keyCode&amp;gt;&amp;lt;script&amp;gt;X=[Z=[B=A=12]];h=e=K=t=P=0;function Y() 
{C=[d=K-38];c=0;for(i=4;i--*K;K-13?c+=!Z[h+p+d]:c-=!Z[h+(C[i]=p*A-Math.round(p/ 
A)*145)])p=B[i];!t|c+4?c-4?0:h+=d:B=C;for(f=K=i=0;i&amp;lt;4;f+=Z[A+p])X[p=h+B[i++]]=1 
if(e=!e){if(f|B){for(l=228;i--;)Z[h+B[i]]=k=1;for(B=[[-7,-20,6,17,-9,3,6][t=++t 
%7]-4,0,1,t-6?-A:-1];l--;h=5)if(l%A)l-=l%A*!Z[l];else for(P+=k++,j=l+=A;--j&amp;gt;A;) 
Z[j]=Z[j-A]}h+=A}for(i=S=&quot;&quot;;i&amp;lt;240;X[i]=Z[i]|=++i%A&amp;lt;2|i&amp;gt;228)i%A?0:S+=&quot;&amp;lt;br&amp;gt;&quot;,S+=X 
[i]?&quot;■&quot;:&quot;□&quot;;document.body.innerHTML=S+P;Z[5]||setTimeout(Y,99-P)}Y()&amp;lt;/script&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이걸로 테트리스가 됩니다.
신기 할 뿐.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SwiftUI - Text</title>
   <link href="http://localhost:4000/2023/09/03/swiftui-text/"/>
   <updated>2023-09-03T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/09/03/swiftui-text</id>
   <content type="html">&lt;p&gt;아이고 오늘 하루도 이렇게 다 지나갔네요&lt;br /&gt;
건강을 지키려고 운동갔다가 집에와서 집정리하고 하루 끝.&lt;br /&gt;
내기전에 SwiftUI에 대해서 정리하는 시간을 가져보려고 합니다.&lt;/p&gt;

&lt;h2 id=&quot;예제&quot;&gt;예제&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Text('Hi')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;이것 하나로 그냥 UILabel에 넣던 부분이 충족이 됩니다.&lt;/p&gt;

&lt;p&gt;SwiftUI는 Swift의 버전에 따라서 많은 영향이 가지만 다음과 같은 것들을 몇가지 적어볼게요&lt;/p&gt;

&lt;h3 id=&quot;line-제한&quot;&gt;Line 제한&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Text(&quot;후루루후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류&quot;)
  .lineLimit(3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;줄-생략하는-기능&quot;&gt;줄 생략하는 기능&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Text(&quot;후루루후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류&quot;)
  .lineLimit(1)
  .truncationMode(.middle)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;폰트의-변경&quot;&gt;폰트의 변경&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Text(&quot;후루루후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류&quot;)
  .font(.largeTitle)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;색상의-변경&quot;&gt;색상의 변경&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Text(&quot;후루루후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류&quot;)
  .foregroundColor(Color.red)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;백그라운드-이건-view의-특성&quot;&gt;백그라운드, 이건 View의 특성&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Text(&quot;후루루후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류후루류&quot;)
    .background(Color.yellow)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;어마어마하게 많은 부분들을 사용할 수 있습니다.&lt;br /&gt;
offset이나 padding 같은 부분들도 물론 View의 속성이라 사용이 가능합니다.&lt;br /&gt;
재미있는 부분은 이 순서들을 변경하게 되면 약간 우리가 원하는 모양이 아닌것으로 나올 수도 있다는 것입니다.&lt;/p&gt;

&lt;p&gt;오늘은 이만…&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SwiftUI란? 특징1편</title>
   <link href="http://localhost:4000/2023/09/02/swiftui-1/"/>
   <updated>2023-09-02T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/09/02/swiftui-1</id>
   <content type="html">&lt;p&gt;애플에서 2019년 WWDC 2019에서 발표한 프레임워크입니다.&lt;br /&gt;
기존의 UIKit보다 쉽게 만들고 개발하기 위해서 만들어졌다고 하는데요.&lt;br /&gt;
사실 처음에 나왔을때에는 UIKit의 여러가지 방향을 제공하여 주지 않아서 UIRepresentable을 이용해서 개발하는 문제가 있었어요.
최근에 iOS16부터는 정말 좀 쓸만한데요&lt;br /&gt;
아직은 쉽지 않은 상태라고 생각하고 있습니다.&lt;br /&gt;
글을 작성하는 이 시점에도 아마존 앱만해도 iOS14가 최소 버전입니다. ㅎㅎ&lt;/p&gt;

&lt;h2 id=&quot;특징&quot;&gt;특징&lt;/h2&gt;
&lt;h3 id=&quot;적은-코드로-더-좋은-앱을-만든다&quot;&gt;적은 코드로 더 좋은 앱을 만든다&lt;/h3&gt;
&lt;p&gt;사실 어떤 내용이냐면 사실은 SwiftUI 자체도 내부에서는 UIKit을 이용하여서 래핑을 하여주었어요.&lt;br /&gt;
UIViewController를 감싸고 있던가 하는 부분들을 프레임워크가 대신 지원해주는것이죠&lt;/p&gt;

&lt;h3 id=&quot;선언형이다&quot;&gt;선언형이다&lt;/h3&gt;
&lt;p&gt;어떤 의미냐면 기존의 UIKit의 코드를 예로 들어볼게요.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let button = UIButton()
button.setTitle(&quot;Hi&quot;, for: .normal)
button.setTitleColor(.red, for: .normal)
rootView.addSubView(button)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;그냥 타이핑한거라 잘 동작안해도 이해해 주세요. ㅠ&lt;br /&gt;
위의 내용은 UIView를 만들고  RootView에 넣어줘입니다.&lt;/p&gt;

&lt;p&gt;그럼 SwiftUI는 어떻느냐&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;struct ContentView: View {
    var body: some View {
        Button(action: {
            print(&quot;click!!&quot;)
        }) {
            Text(&quot;Hi&quot;)
                .font(.largeTitle)
                .foregroundColor(.red)
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위에 넣은것과 거의 비슷한 모양이 나오게 됩니다.
SwiftUI는 이걸 여기에 넣어줘 하는 형태로 만들어지게 되는겁니다.&lt;/p&gt;

&lt;p&gt;간단하게 선언형의 개발방법에 대해서 알아본것과 같습니다.&lt;/p&gt;

&lt;p&gt;중요한것은 사실 저 Button은 UIButton을 wrapping 한것과 같습니다.&lt;/p&gt;

&lt;p&gt;SwiftUI가 나오기전에 이것과 거의 흡사하게 만들었었는데요.
컨셉 자체는 같습니다.
잘보시면 .font다음에 바로 .foregroundColor를 호출할수 있는데요.&lt;br /&gt;
이유는 View를 다시 return 하여주기 때문입니다.&lt;/p&gt;

&lt;p&gt;참 쉽죠?&lt;/p&gt;

&lt;p&gt;각 View의 구성 struct에 대해서도 알아보도록 할게요.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>direnv. 디렉토리 별로 개발환경 구축하기</title>
   <link href="http://localhost:4000/2023/09/01/direnv/"/>
   <updated>2023-09-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/09/01/direnv</id>
   <content type="html">&lt;p&gt;하나의 서비스를 하는 회사에서도 실제적으로는 많은 프로젝트들을 동시에 진행하기도 합니다.&lt;br /&gt;
이럴때에 각 서비스들의 version 등과 같은 환경을 다 동일하게 맞추면 좋지만 버전 업데이트를 위해서는 많은 시간을 들여야 할수도 있습니다.&lt;/p&gt;

&lt;p&gt;그래서 프로젝트 별로 조금 다른 버전을 사용하여서 개발할수도 있습니다.&lt;br /&gt;
이러한 문제점을 없애기 위해서 direnv를 이용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;동작원리는 사용자가 지금 사용하고 있는 디렉토리의 .envrc 파일을 생성하고 읽어 들이면서 필요한 설정들을 불러오는 방식입니다.&lt;br /&gt;
그리고 해당 디렉토리에서 벗어나면 당연스럽게도 해제를 해주어서 여러가지 환경에서 개발하기에 좋도록 만들어줍니다.&lt;/p&gt;

&lt;p&gt;맥에서 받고 싶으면 다음과 같이 합니다.&lt;br /&gt;
물론 brew는 설치가 되어 있어야 합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install direnv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치 여부 확인&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ direnv --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그리고 shell 설정 파일에 값을 추가하여 줍니다.&lt;br /&gt;
공식적으로는 BASH, ZSH, FISH, TCSH, Elvish를 지원한다고 합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# ZSH
~/.zshrc에 아래 내용 추가
$ eval &quot;$(direnv hook zsh)&quot;

# FISH
~/.config/fish/config.fish에 아래 내용 추가
$ eval (direnv hook fish)

# TCSH
~/.cshrc에 아래 내용 추가
$ eval `direnv hook tcsh`

# Elvish
$ direnv hook elvish &amp;gt; ~/.elvish/lib/direnv.elv
~/.elvish/rc.elv에 아래 내용 추가
$ use direnv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;하고 난 다음에는 source를 이용하여서 적용하여 주도록 합니다.&lt;br /&gt;
저는 zsh을 이용하기 때문에 다른분들은 자신의 환경에 맞는걸로 찾아보도록 해요.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ source ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그리고 적용 방법 하나의 폴더를 만들고 내부에서 적용할수 있는 .envrc 파일을 만들어 줍니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd myDir
$ vi .envrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;파일이 생성되면 allow 해달라고 나오는데요. 이때에 direnv allow를 하면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ direnv allow
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;간략하게 direnv를 사용하는 방법에 대해서 알아봤습니다.&lt;br /&gt;
세부적인 세팅이나 사용법에 대해서는 각자의 환경에 맞도록 찾아보시면 많은 자료들이 있으니 찾아보시길 추천 드립니다.&lt;/p&gt;

&lt;p&gt;그럼 모두들 수고하세요.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>VSCode를 원격에서 브라우저로 접속해서 코딩하기</title>
   <link href="http://localhost:4000/2023/08/29/vscode/"/>
   <updated>2023-08-29T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/08/29/vscode</id>
   <content type="html">&lt;p&gt;오늘은 VSCode를 원격으로 돌리는 방법을 알아보려고 합니다.&lt;br /&gt;
물론 VSCode가 그렇게 무겁지 않기 때문에 웬만하면 노트북에 설치가 다 되어 있을거라…&lt;br /&gt;
이동하면서 코딩하기 어렵지는 않습니다.&lt;br /&gt;
그래도 이런 방법도 있다는걸 공유하고 싶어서 글을 남깁니다.&lt;/p&gt;

&lt;p&gt;일단 docker를 이용해서 원격지에 image를 pull 하여 주면 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;hub.docker.com/r/codercom/code-server&quot;&gt;Code server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이미지는 code-server를 이용할겁니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo docker pull codercom/code-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;image를 다 받아오게 되면 다음과 같이 docker container를 실행하면 됩니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo docker run --name code-server -p 8080:8080 -v {YOUR_VOLUME_PATH}:/home/coder/project -e PASSWORD={YOUR_PASSWORD} codercom/code-server:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;docker를 조금 아시는 분들은 -p의 port 부분과 -v 부분의 연결해줄 volume를 조정해서 하시면 됩니다.&lt;br /&gt;
접속 테스트는 localhost:8080으로 하면 됩니다.&lt;br /&gt;
만약 자신의 개인 컴퓨터를 해놓으신거면 공유기 설정에서 포트 포워딩해서 사용하시기 바랍니다.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SwiftUI 학습</title>
   <link href="http://localhost:4000/2023/08/28/swiftui/"/>
   <updated>2023-08-28T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/08/28/swiftui</id>
   <content type="html">&lt;p&gt;SwiftUI를 집중적으로 학습해보기로했다&lt;br /&gt;
선언형이라서 배우기 쉽다고 생각해서 그동안 너무 안했나보다 싶다&lt;br /&gt;
기술적으로 조금 더 발전을 하여 효율적으로 사용하자&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/tutorials/swiftui&quot;&gt;Apple SwiftUI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;위 사이트는 튜토리얼이며,
SwiftUI에 대해서 하나씩 공부하면서 업로드 해보겠다.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>하루종일 기술 찾았는데 안될거 같다</title>
   <link href="http://localhost:4000/2023/08/27/developer/"/>
   <updated>2023-08-27T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/08/27/developer</id>
   <content type="html">&lt;p&gt;오늘 짐정리 마무리하면서 기술적으로 찾아야 하는거 찾아봤는데요&lt;br /&gt;
결론은 안될거 같으네요.&lt;br /&gt;
회사의 일이라 말할순 없지만 일단 방향만 제시하고 다시 더 고도화하는걸로&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2023-08-27-developer-01.jpg&quot; alt=&quot;Developer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;내일 또 회사가서 열심히 일해야지!&lt;br /&gt;
일하는거 너무 재밌네요&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>markdown에 대하여</title>
   <link href="http://localhost:4000/2023/08/26/markdown/"/>
   <updated>2023-08-26T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/08/26/markdown</id>
   <content type="html">&lt;p&gt;지금 글을 작성하는 것도 마크다운으로 작성을 하고 있습니다.&lt;br /&gt;
그럼 마크다운은 무엇인지 알아볼게요&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Markdown은 텍스트 기반의 마크업언어로 2004년 존그루버에 의해 만들어졌으며 쉽게 쓰고 읽을 수 있으며 HTML로 변환이 가능하다. 특수기호와 문자를 이용한 매우 간단한 구조의 문법을 사용하여 웹에서도 보다 빠르게 컨텐츠를 작성하고 보다 직관적으로 인식할 수 있다. 마크다운이 최근 각광받기 시작한 이유는 깃헙(https://github.com) 덕분이다. 깃헙의 저장소Repository에 관한 정보를 기록하는 README.md는 깃헙을 사용하는 사람이라면 누구나 가장 먼저 접하게 되는 마크다운 문서였다. 마크다운을 통해서 설치방법, 소스코드 설명, 이슈 등을 간단하게 기록하고 가독성을 높일 수 있다는 강점이 부각되면서 점점 여러 곳으로 퍼져가게 된다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;장점&quot;&gt;장점&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;간결하다.&lt;/li&gt;
  &lt;li&gt;별도의 도구없이 작성가능하다.&lt;/li&gt;
  &lt;li&gt;다양한 형태로 변환이 가능하다.&lt;/li&gt;
  &lt;li&gt;텍스트(Text)로 저장되기 때문에 용량이 적어 보관이 용이하다.&lt;/li&gt;
  &lt;li&gt;텍스트파일이기 때문에 버전관리시스템을 이용하여 변경이력을 관리할 수 있다.&lt;/li&gt;
  &lt;li&gt;지원하는 프로그램과 플랫폼이 다양하다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;단점&quot;&gt;단점&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;표준이 명확하지 않다.&lt;/li&gt;
  &lt;li&gt;표준이 없기 때문에 도구에 따라서 변환방식이나 생성물이 다르다.&lt;/li&gt;
  &lt;li&gt;모든 HTML 마크업을 대신하지 못한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;사용법&quot;&gt;사용법&lt;/h3&gt;
&lt;h4 id=&quot;헤더headers&quot;&gt;헤더Headers&lt;/h4&gt;
&lt;p&gt;큰제목: 문서 제목&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is an H1
=============
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is an H1
작은제목: 문서 부제목&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
This is an H2
-------------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is an H2
글머리: 1~6까지만 지원&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# This is a H1
## This is a H2
### This is a H3
#### This is a H4
##### This is a H5
###### This is a H6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;this-is-a-h1&quot;&gt;This is a H1&lt;/h1&gt;
&lt;h2 id=&quot;this-is-a-h2&quot;&gt;This is a H2&lt;/h2&gt;
&lt;h3 id=&quot;this-is-a-h3&quot;&gt;This is a H3&lt;/h3&gt;
&lt;h4 id=&quot;this-is-a-h4&quot;&gt;This is a H4&lt;/h4&gt;
&lt;h5 id=&quot;this-is-a-h5&quot;&gt;This is a H5&lt;/h5&gt;
&lt;h6 id=&quot;this-is-a-h6&quot;&gt;This is a H6&lt;/h6&gt;

&lt;h4 id=&quot;blockquote&quot;&gt;BlockQuote&lt;/h4&gt;
&lt;p&gt;이메일에서 사용하는 &amp;gt; 블럭인용문자를 이용한다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; This is a first blockqute.
&amp;gt;	&amp;gt; This is a second blockqute.
&amp;gt;	&amp;gt;	&amp;gt; This is a third blockqute.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;This is a first blockqute.&lt;/p&gt;
  &lt;blockquote&gt;
    &lt;p&gt;This is a second blockqute.&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;This is a third blockqute.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;이 안에서는 다른 마크다운 요소를 포함할 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a H3&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;List
      &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;목록&quot;&gt;목록&lt;/h4&gt;
&lt;h5 id=&quot;순서있는-목록번호&quot;&gt;순서있는 목록(번호)&lt;/h5&gt;
&lt;p&gt;순서있는 목록은 숫자와 점을 사용한다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 첫번째
2. 두번째
3. 세번째
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;첫번째&lt;/li&gt;
  &lt;li&gt;두번째&lt;/li&gt;
  &lt;li&gt;세번째&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;순서없는-목록글머리-기호-----지원&quot;&gt;순서없는 목록(글머리 기호: *, +, - 지원)&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* 빨강
  * 녹색
    * 파랑

+ 빨강
  + 녹색
    + 파랑

- 빨강
  - 녹색
    - 파랑
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;빨강
    &lt;ul&gt;
      &lt;li&gt;녹색
        &lt;ul&gt;
          &lt;li&gt;파랑&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;빨강
    &lt;ul&gt;
      &lt;li&gt;녹색
        &lt;ul&gt;
          &lt;li&gt;파랑&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;빨강
    &lt;ul&gt;
      &lt;li&gt;녹색
        &lt;ul&gt;
          &lt;li&gt;파랑&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;코드&quot;&gt;코드&lt;/h5&gt;
&lt;blockquote&gt;
  &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is Code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is Code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;수평선&quot;&gt;수평선&lt;/h5&gt;
&lt;p&gt;아래 줄은 모두 수평선을 만든다. 마크다운 문서를 미리보기로 출력할 때 페이지 나누기 용도로 많이 사용한다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* * *

***

*****

- - -

---------------------------------------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;링크&quot;&gt;링크&lt;/h5&gt;
&lt;p&gt;참조링크&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[link keyword][id]
[id]: URL &quot;Optional Title here&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;이미지&quot;&gt;이미지&lt;/h5&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Alt text](url)
![Alt text](url &quot;Optional title&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;줄바꿈&quot;&gt;줄바꿈&lt;/h5&gt;
&lt;p&gt;2칸 이상 띄어쓰기를 하면 줄이 바뀐다.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>arm64 실리콘 맥북에서 x86용 lib 만 존재할 경우에</title>
   <link href="http://localhost:4000/2023/08/24/arm64-to-sim/"/>
   <updated>2023-08-24T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/08/24/arm64-to-sim</id>
   <content type="html">&lt;p&gt;사실 인터넷에서 이 문제를 찾아보면 exclude arch 를 하라고 하는것이 제일 많을겁니다.
복잡하게도 SPM을 사용하는 경우에는 이런 제약을 벗어나질 못하게 됩니다.&lt;/p&gt;

&lt;p&gt;웁스.&lt;/p&gt;

&lt;p&gt;그래도 해결 하는 방법은 존재하는데요.
arm64를 포함한 fat lib를 만들어서 넣어주면 됩니다.&lt;/p&gt;

&lt;p&gt;아래의 글을 읽어보고 정리해봐요.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://bogo.wtf/arm64-to-sim.html&quot;&gt;arm64-to-sim&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>이사를 하고 나서</title>
   <link href="http://localhost:4000/2023/08/21/not-good-move/"/>
   <updated>2023-08-21T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/08/21/not-good-move</id>
   <content type="html">&lt;p&gt;오늘은 잡담을 해보려고 합니다.
이사를 할때에 이사업체를 잘 골라야 한다는 말이 정말 이번에 심각하게 느껴졌네요.&lt;/p&gt;

&lt;p&gt;회사를 이직하게 되면서 너무 먼 거리라 힘들어서 서울로 다시 이사를 했습니다
이사업체를 여러군데 검색을 하여서 찾아보았고 괜찮다고 느낀 회사에 신청을 했습니다&lt;/p&gt;

&lt;p&gt;저는 가전은 엘지를 통해서 이전설치를 하였기 때문에 그리고 혼자 사는 사람이기 때문에 많은 짐을 없는 사람입니다.&lt;/p&gt;

&lt;p&gt;그런데 비용을 계속 이야기 했던 처음 가격에서 30만원을 깍아주었지만 다른 업체보다 10만원이나 비쌌습니다
평가가 너무 좋았기 때문에 진행을 하였는데 정말 엉망이었습니다&lt;/p&gt;

&lt;p&gt;원래 살던 동네의 쓰레기봉투가 사라진걸 이사하고 나서 알게 되었습니다
제가 살던 집에 세입자가 들어오기 때문에 주려고 했었거든요
10리터 한묶음 20리터 한묶음 해서 두묶음이 거의 사용을 하지 않은 상태였습니다&lt;/p&gt;

&lt;p&gt;얼마하지 않는 가격이지만 없어진 물건이 있기 때문에
문자로 없어진 물건이 있습니다라고 연락했더니 전화를 해서는 대뜸 화를 내시는겁니다.&lt;/p&gt;

&lt;p&gt;그런데 정말 웃긴건 없어진 물건이 쓰레기 봉투라는것을 이미 그쪽 사장이 알고 있는거였습니다.
자신들이 가지고 갔으니 알고 있는것이겠지요&lt;/p&gt;

&lt;p&gt;정말 어이가 없는 일이어서 저도 두고보자하고 전화를 끊어버렸습니다.&lt;/p&gt;

&lt;p&gt;휴가중에 한풀이 잠시했습니다&lt;/p&gt;

&lt;p&gt;행복하세요.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>사용하는 아키텍쳐 소개 - TCA</title>
   <link href="http://localhost:4000/2023/08/18/tca/"/>
   <updated>2023-08-18T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/08/18/tca</id>
   <content type="html">&lt;p&gt;회사에서 사용하는 아키텍쳐를 하나 소개하려고 합니다.
흡사한 부분은 리액터킷이랑 비슷한데요
저는 사실 바닐라를 가장 좋아하는 사람이라 조금 별로라 느끼긴하지만?
언젠가는 또 Rx처럼 찬밥이 될수도 있으니깐요.
차근히 내용을 채워보도록 하겠습니다.
컨셉과 같은것들 그리고 뷰와 로직을 갈라놓는 부분에서 아름답게 되는 그런것들…
그리고 SwiftUI에 접목하는!&lt;/p&gt;

&lt;h2 id=&quot;주소&quot;&gt;주소&lt;/h2&gt;
&lt;p&gt;https://github.com/pointfreeco/swift-composable-architecture&lt;/p&gt;

&lt;h2 id=&quot;비슷한-녀석&quot;&gt;비슷한 녀석&lt;/h2&gt;
&lt;p&gt;ReactKit을 생각하면 완전 비슷합니다.
State, Reduce, Action
근데 Rx를 할때 저도 이미 만들었던 개념인데 왜 이걸 사용해야하는가?
저는 좀 그래요…
일단 더 파고 볼게요.&lt;/p&gt;

&lt;h2 id=&quot;최신-버전&quot;&gt;최신 버전&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2023년 8월 23일 기준. 1.2.0이 나왔습니다.&lt;/li&gt;
  &lt;li&gt;1.0.0이 나온지 한달도 안된…
이렇다 보니깐 이전에 Swift 버전 왜 이렇게 미친듯이 올리냐고 할때가 생각 나네요…
덜덜덜합니다.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>jekyll과 ruby를 이용하여 github 블로그 이용하기</title>
   <link href="http://localhost:4000/2023/08/12/how-setting-jekyll+ruby/"/>
   <updated>2023-08-12T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/08/12/how-setting-jekyll+ruby</id>
   <content type="html">&lt;p&gt;github에 블로그를 하기 위해서는 jekyll을 많이들 이용을 합니다.
그래서 이것을 설치하는 방법을 알아보도록 할게요.
참고로 저는 맥을 사용하므로 맥에서 설치하는 방법을 알려드릴겁니다.
개발자중에 윈도우 사용하시는분들에게는 죄송…&lt;/p&gt;

&lt;h2 id=&quot;command-line-tool-설치&quot;&gt;Command Line Tool 설치&lt;/h2&gt;
&lt;p&gt;xcode가 있다면 설치가 되어 있을겁니다.
그렇지만 중간에 설치가 될수 있지만 자동으로 되니까 그냥 패스하시던지 명령어 한번만 쳐주세요&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ruby-설치&quot;&gt;Ruby 설치&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ /bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;한가지 알아둘 점은 rosetta로 설치된것이 있다면 삭제하고 다시 설치합니다.
저도 이것 때문에 고생을 했습니다.&lt;/p&gt;

&lt;h2 id=&quot;rbenv-설치&quot;&gt;rbenv 설치&lt;/h2&gt;
&lt;p&gt;Ruby version manager인데요.
루비의 사용할 버전을 관리해주는 프로그램입니다.
저는 2.7.7을 사용하면서 버전을 선택하는데 사용했어요.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install rbenv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;rbenv-환경-설정&quot;&gt;rbenv 환경 설정&lt;/h2&gt;
&lt;p&gt;보통 맥을 설치하고 iTerm 등을 설치하면 ~/.zshrc 파일에 환경이 설정되어 있을거에요.
이 파일을 어떠한 방법으로든 수정합니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ open ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;이렇게 열어서 넣어주던지 아래와 같이 명령을 합니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ echo 'if which rbenv &amp;gt; /dev/null; then eval &quot;$(rbenv init -)&quot;; fi' &amp;gt;&amp;gt; ~/.zshrc
$ source ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;rbenv를-이용한-루비-설치&quot;&gt;rbenv를 이용한 루비 설치&lt;/h2&gt;
&lt;p&gt;이제야 뭔가 할수 있네요.
루비를 받아줘야 합니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rbenv install 2.7.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;루비버전-설정&quot;&gt;루비버전 설정&lt;/h2&gt;
&lt;p&gt;global 설정으로 루비 버전을 지정해 줍니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rbenv global 2.7.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;jekyll-설치&quot;&gt;Jekyll 설치&lt;/h2&gt;
&lt;p&gt;이제야 이걸 설치 가능합니다.
폴더를 새로 만들어서 이 명령을 사용합니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gem install jekyll bundler github-pages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;맘에드는-테마를-선택합니다&quot;&gt;맘에드는 테마를 선택합니다.&lt;/h3&gt;
&lt;p&gt;다운로드 하여 줍니다. 다운로드 받고 나서 압축을 풀어보면 Gemfile이 존재하는데요. 이것을 통해서 서버 구동을 하면서 테스트가 가능하게 됩니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;URL : http://jekyllthemes.org/&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;블로그-폴더-만들기&quot;&gt;블로그 폴더 만들기&lt;/h3&gt;
&lt;p&gt;프로젝트 생성하듯이 폴더의 이름을 다음과 같이 넣어줘서 만들어줍니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ jekyll new [블로그 이름]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;블로그-내용-적고-테스트&quot;&gt;블로그 내용 적고 테스트&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;구동-확인&quot;&gt;구동 확인&lt;/h3&gt;
&lt;p&gt;브라우저를 열어주십시오&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;localhost:4000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Hello, github blog</title>
   <link href="http://localhost:4000/2023/08/12/hello-github-blog/"/>
   <updated>2023-08-12T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/08/12/hello-github-blog</id>
   <content type="html">&lt;p&gt;다양한 내용으로 알차게 꾸며 나가겠습니다.&lt;/p&gt;
</content>
 </entry>
 

</feed>
